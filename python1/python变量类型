    1.Python 变量类型
        变量存储在内存中的值。这就意味着在创建变量时会在内存中开辟一个空间。
        基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。
        因此，变量可以指定不同的数据类型，这些变量可以存储整数，小数或字符。
    2.变量赋值
        Python 中的变量赋值不需要类型声明。
        每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。
        每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
        等号（=）用来给变量赋值。
        等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值。例如：
        #!/usr/bin/python
        # -*- coding: UTF-8 -*-

        counter = 100 # 赋值整型变量
        miles = 1000.0 # 浮点型
        name = "John" # 字符串

        print counter
        print miles
        print name
    3.多个变量赋值
        Python允许你同时为多个变量赋值。例如：a = b = c = 1
        也可以为多个对象指定多个变量。例如:a, b, c = 1, 2, "john"
        两个整型对象1和2的分配给变量 a 和 b，字符串对象 "john" 分配给变量 c。
    4.标准数据类型
        在内存中存储的数据可以有多种类型。
        例如，一个人的年龄可以用数字来存储，他的名字可以用字符来存储。
        Python 定义了一些标准类型，用于存储各种类型的数据。
        Python有五个标准的数据类型：
        Numbers（数字）
        String（字符串）
        List（列表）
        Tuple（元组）
        Dictionary（字典）
    5.python数字
        数字数据类型用于存储数值.
        当指定一个值时,Number对象就会被创建:
           var1 = 1;
           var2 = 2;

           使用del删除一些对象的引用
           del的语法是:
           del var1[,var2[,var3...,varN]]]
         Python支持四种不同的数字类型:
         int (有符号整型)
         long (长整型[也可以代表八进制和十六进制])
         float (浮点型)
         complex(复数)
     6.Python字符宣传
     str = str = 'Hello World!'
        print str           # 输出完整字符串
        print str[0]        # 输出字符串中的第一个字符
        print str[2:5]      # 输出字符串中第三个至第五个之间的字符串
        print str[2:]       # 输出从第三个字符开始的字符串
        print str * 2       # 输出字符串两次
        print str + "TEST"  # 输出连接的字符串

        + 是连接操作,  *  是重复操作
     7.Python列表
        list = [ 'runoob', 786 , 2.23, 'john', 70.2 ]
        tinylist = [123, 'john']
        print list               # 输出完整列表
        print list[0]            # 输出列表的第一个元素
        print list[1:3]          # 输出第二个至第三个的元素
        print list[2:]           # 输出从第三个开始至列表末尾的所有元素
        print tinylist * 2       # 输出列表两次
        print list + tinylist    # 打印组合的列表
     8.Python元祖
        元组是另一个数据类型，类似于List（列表）。
        元组用"()"标识。内部元素用逗号隔开。但是元组不能二次赋值，相当于只读列表。

         tuple = ( 'runoob', 786 , 2.23, 'john', 70.2 )
         tinytuple = (123, 'john')
         print tuple               # 输出完整元组
         print tuple[0]            # 输出元组的第一个元素
         print tuple[1:3]          # 输出第二个至第三个的元素
         print tuple[2:]           # 输出从第三个开始至列表末尾的所有元素
         print tinytuple * 2       # 输出元组两次
         print tuple + tinytuple   # 打印组合的元组

         tuple = ( 'runoob', 786 , 2.23, 'john', 70.2 )
        list = [ 'runoob', 786 , 2.23, 'john', 70.2 ]
        tuple[2] = 1000    # 元组中是非法应用
        list[2] = 1000     # 列表中是合法应用
      9.Python字典
        字典(dictionary)是除列表以外python之中最灵活的内置数据结构类型。列表是有序的对象结合，字典是无序的对象集合。
        两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。
        字典用"{ }"标识。字典由索引(key)和它对应的值value组成。






























